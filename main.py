# -*- coding: utf-8 -*-
"""main.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UKh-8cxPk8tLfhUR7rEVVsMWTjpv-v1T
"""

import streamlit as st
import pickle
import pandas as pd
import numpy as np

# Load the trained model
model = pickle.load(open("titanic_model.pkl", "rb"))

# Create the Streamlit app
st.title("Titanic Survival Prediction")

# Create input fields for user
st.header("Passenger Information")

# Dropdown for Pclass
pclass = st.selectbox("Pclass", [1, 2, 3])

# Dropdown for Sex with categorical values
sex_option = st.selectbox("Sex", ['Male', 'Female'])
sex = 0 if sex_option == 'Male' else 1  # Encoding Male as 0, Female as 1

# Numeric inputs
age = st.number_input("Age", min_value=0, max_value=100, value=30)
sibsp = st.number_input("SibSp", min_value=0, value=0)
parch = st.number_input("Parch", min_value=0, value=0)
fare = st.number_input("Fare", min_value=0.0, value=10.0)

# Dropdown for Embarked with categorical values
embarked_option = st.selectbox("Embarked", ['Cherbourg', 'Queenstown', 'Southampton'])
embarked_mapping = {'Cherbourg': 0, 'Queenstown': 1, 'Southampton': 2}
embarked = embarked_mapping[embarked_option]  # Encoding Embarked

# Calculate family size
family_size = sibsp + parch + 1

# Create a button to trigger prediction
if st.button("Predict"):
    # Create a DataFrame from user inputs
    input_data = pd.DataFrame({
        'Pclass': [pclass],
        'Sex': [sex],
        'Age': [age],
        'SibSp': [sibsp],
        'Parch': [parch],
        'Fare': [fare],
        'Embarked': [embarked],
        'FamilySize': [family_size]
    })

    # Make prediction
    prediction = model.predict(input_data)[0]

    # Display prediction
    if prediction == 0:
        st.write("Passenger is likely to **not survive**.")
    else:
        st.write("Passenger is likely to **survive**.")

